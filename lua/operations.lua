-- Generated by ts-morph script. Do not edit manually!

---@param func function
---@return function
local function safe_operation(func)
    return function()
        local success, err = pcall(func)
        if not success then
            reaper.ShowConsoleMsg("Error: " .. tostring(err) .. "\n")
        end
    end
end

local globals = require "globals"
local ListProjects = require "operations/list_projects"
local OpenProject = require "operations/open_project"
local TestActionId = require "operations/test_action_id"

local Operations = {
	["listProjects"] = safe_operation(function()
		local result = ListProjects()
		if result then reaper.SetExtState(globals.SECTION, globals.KEYS.script_output, result, false) end
	end),

	["openProject"] = safe_operation(function()
		local projectPath = reaper.GetExtState(globals.SECTION, "projectPath")
		if not projectPath or projectPath == "" then
			error("Missing required parameter: projectPath")
		end

		OpenProject(projectPath)
		reaper.DeleteExtState(globals.SECTION, "projectPath", true)
	end),

	["testActionId"] = safe_operation(function()
		local testNonce = reaper.GetExtState(globals.SECTION, "testNonce")
		if not testNonce or testNonce == "" then
			error("Missing required parameter: testNonce")
		end

		local result = TestActionId(testNonce)
		if result then reaper.SetExtState(globals.SECTION, globals.KEYS.script_output, result, false) end
		reaper.DeleteExtState(globals.SECTION, "testNonce", true)
	end),
}

return Operations