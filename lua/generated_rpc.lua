-- Generated by ts-morph script. Do not edit manually!

local globals = require "globals"

---@param func function
---@return function
local function safe_operation(func)
    return function()
        local success, err = pcall(func)
        if not success then
            reaper.ShowConsoleMsg("Error: " .. tostring(err) .. "\n")
        end
    end
end

local ListProjects = require "list_projects"
local OpenProject = require "open_project"
local TestActionId = require "test_action_id"

local operations = {
	["listProjects"] = safe_operation(function()
		local result = ListProjects()
		if result then
			reaper.SetExtState(globals.SECTION, globals.KEYS.script_output, result, false)
		end
	end),
	["openProject"] = safe_operation(function()
		local projectPath = reaper.GetExtState(globals.SECTION, "projectPath")
		if not projectPath or projectPath == "" then
			error("Missing required parameter: projectPath")
		end

		OpenProject(projectPath)
		reaper.DeleteExtState(globals.SECTION, "projectPath", true)
	end),
	["testActionId"] = safe_operation(function()
		local testNonce = reaper.GetExtState(globals.SECTION, "testNonce")
		if not testNonce or testNonce == "" then
			error("Missing required parameter: testNonce")
		end

		local result = TestActionId(testNonce)
		if result then
			reaper.SetExtState(globals.SECTION, globals.KEYS.script_output, result, false)
		end
		reaper.DeleteExtState(globals.SECTION, "testNonce", true)
	end),
}

-- Main execution logic
local operation = reaper.GetExtState(globals.SECTION, globals.KEYS.operation)
if not operation or operation == "" then
    reaper.ShowConsoleMsg("No operation specified. Exiting.\n")
    return
end

if operations[operation] then
    operations[operation]()
    reaper.DeleteExtState(globals.SECTION, globals.KEYS.operation, true)
else
    reaper.ShowConsoleMsg("Unknown operation: " .. operation .. "\n")
end
