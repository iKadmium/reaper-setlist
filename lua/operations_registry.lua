-- Generated by ts-morph script. Do not edit manually!

---@param func function
---@return function
local function safe_operation(func)
	return function()
		local success, err = pcall(func)
		if not success then
			reaper.ShowConsoleMsg("Error: " .. tostring(err) .. "\n")
		end
	end
end

require "globals"
local ListProjects = require "operations/list_projects"
local OpenProject = require "operations/open_project"
local TestActionId = require "operations/test_action_id"


local Operations = {
	["listProjects"] = safe_operation(function()
		local projects = ListProjects()

		if not projects or projects == '' then
			error("Operation projects failed to return required output: projects")
		end

		reaper.SetExtState(SECTION, "projects", projects, true)
	end),

	["openProject"] = safe_operation(function()
		local projectPath = reaper.GetExtState(SECTION, "projectPath")
		if not projectPath or projectPath == "" then
			error("Missing required parameter: projectPath")
		end

		OpenProject(projectPath)

		reaper.DeleteExtState(SECTION, "projectPath", true)
	end),

	["testActionId"] = safe_operation(function()
		local testNonce = reaper.GetExtState(SECTION, "testNonce")
		if not testNonce or testNonce == "" then
			error("Missing required parameter: testNonce")
		end

		local testOutput = TestActionId(testNonce)

		if not testOutput or testOutput == '' then
			error("Operation testOutput failed to return required output: testOutput")
		end

		reaper.SetExtState(SECTION, "testOutput", testOutput, true)
		reaper.DeleteExtState(SECTION, "testNonce", true)
	end),
}

return Operations
