name: Semantic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write
  packages: write

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: github.repository_owner == github.actor || github.event_name == 'workflow_dispatch'
    outputs:
      new-release: ${{ steps.semantic.outputs.new-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for Frontend CI
        if: github.event_name == 'push'
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-frontend
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Frontend"
          ref: ${{ github.event.after || github.sha }}
          timeoutSeconds: 1800

      - name: Wait for Backend CI
        if: github.event_name == 'push'
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-backend
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Backend"
          ref: ${{ github.event.after || github.sha }}
          timeoutSeconds: 1800

      - name: Check CI Results
        if: github.event_name == 'push'
        run: |
          echo "Frontend check result: ${{ steps.wait-for-frontend.outputs.conclusion || 'skipped' }}"
          echo "Backend check result: ${{ steps.wait-for-backend.outputs.conclusion || 'skipped' }}"

          # Only fail if a check explicitly failed (not if it was skipped/didn't exist)
          if [[ "${{ steps.wait-for-frontend.outputs.conclusion }}" == "failure" ]] || [[ "${{ steps.wait-for-backend.outputs.conclusion }}" == "failure" ]]; then
            echo "CI checks failed!"
            exit 1
          fi

          echo "CI checks passed or were skipped (no changes)"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Configure Git
        run: |
          git config --global user.name 'semantic-release-bot'
          git config --global user.email 'semantic-release-bot@users.noreply.github.com'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release @semantic-release/changelog

      - name: Run semantic-release (dry-run)
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run semantic-release in dry-run mode to get release info
          semantic-release --dry-run 2>&1 | tee semantic-release.log

          # Check if a new release would be published
          if grep -q "Published release" semantic-release.log || grep -q "The next release version is" semantic-release.log; then
            echo "new-release=true" >> $GITHUB_OUTPUT
            # Extract version from log
            VERSION=$(grep -o "The next release version is [0-9.]*" semantic-release.log | sed 's/The next release version is //' || echo "")
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "new-release=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        if: steps.semantic.outputs.new-release == 'true'
        run: |
          # Run semantic-release again to generate changelog (still dry-run)
          semantic-release --dry-run

      - name: Create Release PR
        if: steps.semantic.outputs.new-release == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(release): ${{ steps.semantic.outputs.version }} [skip ci]"
          title: "chore(release): ${{ steps.semantic.outputs.version }}"
          body: |
            ## Release ${{ steps.semantic.outputs.version }}

            This is an automated release PR created by semantic-release.

            ### Changes
            - Updated CHANGELOG.md with release notes
            - Prepared for version ${{ steps.semantic.outputs.version }}

            **Merging this PR will trigger the actual release process.**
          branch: release/${{ steps.semantic.outputs.version }}
          delete-branch: true
