# .github/workflows/docker-image.yml
name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  APP_NAME: reaper-setlist
  IMAGE_ID_RAW: ghcr.io/${{ github.repository }}

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Install frontend dependencies
        run: bun install
      - name: Run frontend tests
        run: bun test

  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Rust dependencies (and build for tests)
        run: cargo install --locked --path .
      - name: Run Clippy for linting
        run: cargo clippy --locked --all-features -- -D warnings
      - name: Run backend tests
        run: cargo test --locked --all-features

      steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable # Install stable Rust on the host
          targets: x86_64-unknown-linux-musl # Install the musl target for cargo cross to use

      - name: Install cross
        run: cargo install cross

      - name: Login to GHCR (if pulling private images or pushing)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image (using cross to build backend)
        run: |
          # Build frontend in a temp directory
          bun install --prefix frontend
          bun run build --prefix frontend

          # Use 'cross' to build the backend for the target architecture
          # 'cross' will automatically use the ghcr.io/cross-rs/x86_64-unknown-linux-musl image
          # This command builds the binary in target/x86_64-unknown-linux-musl/release/
          cross build --release --target x86_64-unknown-linux-musl

          # Now, build the final Docker image using a simple Dockerfile
          # that copies the pre-built binaries.
          # Your Dockerfile would look much simpler for the backend copy.
          docker buildx build \
            --platform linux/amd64 \
            --build-arg BUILDPLATFORM=linux/arm64 \
            -t ghcr.io/${{ github.repository }}/reaper-setlist-backend:latest \
            --push \
            .
