# .github/workflows/docker-image.yml
name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  APP_NAME: reaper-setlist
  IMAGE_ID_RAW: ghcr.io/${{ github.repository }}

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Install frontend dependencies
        run: bun install
      - name: Run frontend tests
        run: bun test

  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Rust dependencies (and build for tests)
        run: cargo install --locked --path .
      - name: Run Clippy for linting
        run: cargo clippy --locked --all-features -- -D warnings
      - name: Run backend tests
        run: cargo test --locked --all-features

  build:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase IMAGE_ID for GHCR
        id: set_image_id
        run: |
          IMAGE_ID_LOWER=$(echo "${{ env.IMAGE_ID_RAW }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_ID=${IMAGE_ID_LOWER}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_ID }}
          tags: |
            type=raw,value=${{ env.APP_NAME }}-${{ github.sha }}
            type=ref,event=branch,enable=${{ github.ref == 'refs/heads/main' }},value=latest
            type=ref,event=pr,suffix=-pr{{ github.event.pull_request.number }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE_ID }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_ID }}:buildcache,mode=max
          target: final_image
          # Dynamically set build-args for the final stage based on TARGETPLATFORM.
          # This uses the specific feature of build-push-action to pass dynamic args per platform.
          build-args: |
            linux/amd64/FINAL_BUILD_TRIPLE=x86_64-unknown-linux-musl
            linux/arm64/FINAL_BUILD_TRIPLE=aarch64-unknown-linux-musl
